#!/bin/bash
# Brings up Ansible to install the Kubernetes environment.

## Check the dependencies before running the rest of the script
echo "Checking dependencies..."
echo "Checking kubectl..."
if ! command -v kubectl &> /dev/null
then
  echo "You must have Kubernetes installed!"
  exit 1
fi
echo "OK"
echo "Checking ansible-playbook..."
if ! command -v ansible-playbook &> /dev/null
then
  echo "You must have Ansible installed!"
  exit 1
fi
echo "OK"

## Retrieving the arguments
while getopts f:d:l:h flag
do
  case "${flag}" in
    f) flags=${OPTARG};;
    d) deploy=${OPTARG};;
    l) nodeName=${OPTARG};;
    h) help="true";;
    *) exit 1;;
  esac
done

## Setting default values
deploy=${deploy:-"deploy.yaml"}
flags=${flags:-"-vvvv"}

nodeNameSuffix="worker"

## Print help
if [ "${help}" == "true" ]
then
  echo "usage: $0 [OPTIONS]"
  echo "  -d: deploy file to be used (defaults to deploy.yaml)"
  echo "  -f: Ansible flags to be passed, like -vvvv, --tags=100k (defaults to -vvvv)"
  echo "  -l: Name of the Worker Node to be labeled with the labels required by the volumes"
  echo "  -h: shows the script help (this message)"
  exit 1
fi

## Trying to find out the name of the Worker Node...
if [ -z "${nodeName}" ] ; then
  nodeName=$(kubectl get nodes -o NAME | grep "${nodeNameSuffix}" | cut -d'/' -f 2)
fi

## labeling worker node
if [ -n "${nodeName+true}" ] ; then
  echo "labeling worker node..."
  kubectl label nodes "${nodeName}" dojot.components/group=dojot --overwrite
fi

## Creating the volumes
echo "Bringing volumes up..."
if ! kubectl apply -f local_storage_example/volumes/
then
  echo "Error while bringing volumes up!"
  exit 1
fi

## Running Ansible
ansible-playbook -K -k -i inventories/example_local "${deploy}" "${flags}"

