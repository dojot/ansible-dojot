apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: k2v-bridge
  namespace: {{ dojot_namespace }}
spec:
  serviceName: "k2v-bridge"
  selector:
    matchLabels:
      name: k2v-bridge
  replicas: {{ dojot_bridges_replicas }}
  template:
    metadata:
      labels:
        app: dojot
        name: k2v-bridge
    spec:
      restartPolicy: Always
      containers:
      - name: k2v-bridge
        image: dojot/k2v-bridge:{{ dojot_k2v_version}}
        readinessProbe:
          httpGet:
            path: /ready
            port: 9000
          failureThreshold: 1
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 3
        livenessProbe:
          httpGet:
            path: /live
            port: 9000
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
        env:
        - name: K2V_APP_USER_CONFIG_FILE
          value: "default.conf"
        - name: K2V_APP_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K2V_PRODUCER_METADATA_BROKER_LIST
          value: "kafka-server:{{ dojot_kafka_port }}"
        - name: K2V_MQTT_PORT
          value: "9883"
        - name: K2V_MQTT_CA
          value: "/certs/ca.crt"
        - name: K2V_MQTT_CERT
          value: "/certs/k2v-bridge.crt"
        - name: K2V_MQTT_KEY
          value: "/certs/k2v-bridge.key"
        - name: K2V_LOG_CONSOLE_LEVEL
          value: "info"
        volumeMounts:
        - mountPath: /certs
          name: k2v-certs
      - name: k2v-sidecar
        image: dojot/cert-sidecar:{{ dojot_k2v_version}}
        readinessProbe:
          httpGet:
            path: /ready
            port: 8889
          failureThreshold: 1
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 3
        livenessProbe:
          httpGet:
            path: /live
            port: 8889
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
        env:
        - name: CERT_SC_APP_SIDECAR_TO
          value: "k2v-bridge"
        - name: CERT_SC_LOG_CONSOLE_LEVEL
          value: "info"
        - name: CERT_SC_CERTS_CRL
          value: "false"  
        - name: CERT_SC_CERTS_HOSTNAMES
          value: "[\"k2v-bridge\"]"
        - name: CERT_SC_CERTS_FILES_BASEPATH
          value: "/certs"
        - name: CERT_SC_CERTS_FILES_CA
          value: "ca.crt"
        - name: CERT_SC_CERTS_FILES_CERT
          value: "k2v-bridge.crt"
        - name: CERT_SC_CERTS_FILES_KEY
          value: "k2v-bridge.key"     
        volumeMounts:
        - mountPath: /certs
          name: k2v-certs
      volumes:
      - name: k2v-certs
        emptyDir: {}        
{% if dojot_enable_node_affinity %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: dojot.components/vernemq
                operator: In
                values:
                - "enabled"
{% endif %}
