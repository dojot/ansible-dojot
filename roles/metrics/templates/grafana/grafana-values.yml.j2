rbac:
  create: true
  pspEnabled: true
  pspUseAppArmor: true
  namespaced: false

image:
  repository: grafana/grafana
  tag: 8.4.2
  sha: ""
  pullPolicy: IfNotPresent

downloadDashboardsImage:
  repository: curlimages/curl
  tag: 7.73.0
  sha: ""
  pullPolicy: IfNotPresent

podPortName: grafana

service:
  enabled: true
  type: ClusterIP
  port: 80
  targetPort: 3000
  portName: service

initChownData:
  enabled: true
  image:
    repository: busybox
    tag: "1.31.1"
    sha: ""
    pullPolicy: IfNotPresent

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

affinity:
podAntiAffinity:
  requiredDuringSchedulingIgnoredDuringExecution:
  - labelSelector:
      matchExpressions:
      - key: dojot.components/dojot
        operator: In
        values:
        - enabled

persistence:
  type: pvc
  enabled: true
  accessModes:
  - ReadWriteOnce
  size: 10Gi 
  storageClassName: {{ dojot_storage_class_name }}
  finalizers:
    - kubernetes.io/pvc-protection
  labels:
    app: grafana
  name: grafana
  namespace: dojot-monitoring

adminUser: admin
adminPassword: admin

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: "Prometheus"
      type: "prometheus"
      orgId: 1
      url: "http://prometheus-server.{{dojot_monitoring_namespace}}.svc.cluster.local"
      access: proxy
      isDefault: true
      editable: true

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: 'monitoring'
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /var/lib/grafana/dashboards/default

dashboards:
  default:
    #kube-state-metrics-v2:
    #  gnetId: 13332
    #  revision: 2
    #  datasource: Prometheus
    #deployment-metrics:
    #  gnetId: 741
    #  revision: 0
    #  datasource: Prometheus
    system-stats:
      gnetId: 15713
      revision: 0
      datasource: Prometheus
    docker-stats:
      gnetId: 15712
      revision: 0
      datasource: Prometheus
    #dojot-100k:
    #  gnetId: 15706
    #  revision: 0
    #  datasource: Prometheus
    #k8s-resource-namespace-workloads:
    #  gnetId: 15697
    #  revision: 0
    #  datasource: Prometheus
    #locust:
    #  gnetId: 15701
    #  revision: 0
    #  datasource: Prometheus
    #vmq-cluster:
    #  gnetId: 15696
    #  revision: 0
    #  datasource: Prometheus
    #vmq-node:
    #  gnetId: 15695
    #  revision: 0
    #  datasource: Prometheus
    #k8s-resource-cluster:
    #  gnetId: 15687
    #  revision: 0
    #  datasource: Prometheus
    #k8s-resource-namespace-pods:
    #  gnetId: 15692
    #  revision: 0
    #  datasource: Prometheus
    #k8s-resource-pod:
    #  gnetId: 15694
    #  revision: 0
    #  datasource: Prometheus
    #k8s-resource-workload:
    #  gnetId: 15693
    # revision: 0
    #  datasource: Prometheus
    #k8s-nodes:
    #  gnetId: 15688
    #  revision: 0
    #  datasource: Prometheus
    #k8s-persistentvolumes:
    #  gnetId: 15691
    #  revision: 0
    #  datasource: Prometheus
    #k8s-pods:
    #  gnetId: 15689
    #  revision: 0
    #  datasource: Prometheus
    #k8s-statefulsets:
    #  gnetId: 15690
    #  revision: 0
    #  datasource: Prometheus
    #k8s-usemethod-cluster:
    #  gnetId: 15685
    #  revision: 0
    #  datasource: Prometheus
    #k8s-usemethod-node:
    #  gnetId: 15686
    #  revision: 0
    #  datasource: Prometheus
    #kafka-stats:
    #  gnetId: 15590
    #  revision: 0
    #  datasource: Prometheus
    #kong-stats:
    #  gnetId: 15595
    #  revision: 0
    #  datasource: Prometheus
    #verneMQ-stats:
    #  gnetId: 15598
    #  revision: 0
    #  datasource: Prometheus
    #mongo-stats:
    #  gnetId: 15596
    #  revision: 0
    #  datasource: Prometheus
    #influx-stats:
    #  gnetId: 15594
    #  revision: 0
    #  datasource: Prometheus
    #rabbitMQ-stats:
    #  gnetId: 15597
    #  revision: 0
    #  datasource: Prometheus
    overview-stats:
      gnetId: 15593
      revision: 0
      datasource: Prometheus


grafana.ini:
  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  #database:
    # caso n√£o funcione com sqlite3 (testar quando chegar)testar com mysql novamente
    #type: mysql #postgres  #sqlite3
    #host: 0.0.0.0:3306
  #  type: sqlite3
  #  host: 127.0.0.1:3306
  #  name: grafana
  #  user: root
  #unified_alerting:
  #  enabled: false
  #alerting:
  #  enabled: true
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net