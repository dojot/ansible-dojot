rbac:
  create: true
  pspEnabled: true
  pspUseAppArmor: true
  namespaced: false

image:
  repository: grafana/grafana
  tag: 8.4.2
  pullPolicy: IfNotPresent

downloadDashboardsImage:
  repository: curlimages/curl
  tag: 7.73.0
  pullPolicy: IfNotPresent

podPortName: grafana

service:
  enabled: true
  type: ClusterIP
  port: 80
  targetPort: 3000
  portName: service

initChownData:
  enabled: true
  image:
    repository: busybox
    tag: "1.31.1"
    sha: ""
    pullPolicy: IfNotPresent

resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 128Mi

affinity:
podAntiAffinity:
  requiredDuringSchedulingIgnoredDuringExecution:
  - labelSelector:
      matchExpressions:
      - key: dojot.components/dojot
        operator: In
        values:
        - enabled

persistence:
  type: pvc
  enabled: true
  accessModes:
  - ReadWriteOnce
  size: 10Gi 
  storageClassName: "{{ dojot_storage_class_name }}"
  finalizers:
    - kubernetes.io/pvc-protection
  labels:
    app: grafana
  name: grafana
  namespace: "{{dojot_monitoring_namespace}}"

adminUser: admin
adminPassword: admin

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: "Prometheus"
      type: "prometheus"
      orgId: 1
      url: "http://prometheus-server.{{dojot_monitoring_namespace}}.svc.cluster.local"
      access: proxy
      isDefault: true
      editable: true

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: 'monitoring'
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /var/lib/grafana/dashboards/default

dashboards:
  default:
    system-metrics:
      gnetId: 15592
      revision: 0
      datasource: Prometheus
    docker-metrics:
      gnetId: 15712
      revision: 0
      datasource: Prometheus
    dojot-100k:
      gnetId: 15706
      revision: 0
      datasource: Prometheus
    k8s-resource-namespace-workloads:
      gnetId: 12118
      revision: 0
      datasource: Prometheus
    locust:
      gnetId: 15701
      revision: 0
      datasource: Prometheus
    vmq-cluster:
      gnetId: 15696
      revision: 0
      datasource: Prometheus
    vmq-node:
      gnetId: 15695
      revision: 0
      datasource: Prometheus
    k8s-resource-cluster:
      gnetId: 12114
      revision: 0
      datasource: Prometheus
    k8s-resource-namespace-pods:
      gnetId: 12117
      revision: 0
      datasource: Prometheus
    k8s-resource-pod:
      gnetId: 12120
      revision: 1
      datasource: Prometheus
    k8s-resource-workload:
      gnetId: 12121
      revision: 0
      datasource: Prometheus
    k8s-nodes:
      gnetId: 12133
      revision: 0
      datasource: Prometheus
    k8s-persistentvolumes:
      gnetId: 12127
      revision: 0
      datasource: Prometheus
    k8s-pods:
      gnetId: 12128
      revision: 0
      datasource: Prometheus
    k8s-statefulsets:
      gnetId: 12131
      revision: 0
      datasource: Prometheus
    k8s-usemethod-cluster:
      gnetId: 12135
      revision: 0
      datasource: Prometheus
    k8s-usemethod-node:
      gnetId: 12136
      revision: 0
      datasource: Prometheus
    kafka-stats:
      gnetId: 15965
      revision: 0
      datasource: Prometheus
    vernemq:
      gnetId: 15598
      revision: 0
      datasource: Prometheus
    kong:
      gnetId: 15595
      revision: 0
      datasource: Prometheus
    influxdb:
      gnetId: 15594
      revision: 0
      datasource: Prometheus
    mongodb:
      gnetId: 15596
      revision: 0
      datasource: Prometheus
    postgres:
      gnetId: 9628
      revision: 7
      datasource: Prometheus
    RabbitMQ-Overview:
      gnetId: 10991
      revision: 0
      datasource: Prometheus
    RabbitMQ-Quorum-Queues-Raft:
      gnetId: 11340
      revision: 0
      datasource: Prometheus
    RabbitMQ-Stream:
      gnetId: 14798
      revision: 0
      datasource: Prometheus
    overview-stats:
      gnetId: 15593
      revision: 0
      datasource: Prometheus

grafana.ini:
  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net