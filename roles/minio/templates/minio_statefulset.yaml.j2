apiVersion: v1
kind: StatefulSet
metadata:
  name: minio
  namespace: {{ dojot_namespace }}
spec:
  serviceName: minio
  replicas: {{ dojot_minio_cluster_size }}
  selector:
    matchLabels:
      app: dojot
      name: minio
  template:
    metadata:
      labels:
        app: dojot
        name: minio
    spec:
      restartPolicy: Always
{% if dojot_enable_node_affinity %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: dojot.components/dojot
                operator: In
                values:
                - "enabled"
{% endif %}
      containers:
      - name: minio
        env:
        - name: MINIO_ACCESS_KEY_FILE
          value: MINIO_ACCESS_KEY
        - name: MINIO_SECRET_KEY_FILE
          value: MINIO_SECRET_KEY
        image: dojot/minio:{{ dojot_minio_version }}
        args:
        - server
        - /data
        ports:
        - containerPort: {{ dojot_minio_port }}
        volumeMounts:
        - name: minio-volume
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 20
  volumeClaimTemplates:
  - metadata:
      name: minio-volume
    spec:
      selector:
        matchLabels:
          app: dojot
          db: minio
      accessModes:
        - ReadWriteOnce
      storageClassName: {{ dojot_storage_class_name }}
      resources:
        requests:
          storage: {{ dojot_minio_volume_size }}
