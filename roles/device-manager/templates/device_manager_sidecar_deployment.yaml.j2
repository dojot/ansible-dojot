apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: device-manager-sidecar
    app: dojot
  name: device-manager-sidecar
  namespace: {{ dojot_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dojot
      name: device-manager-sidecar
  template:
    metadata:
      labels:
        name: device-manager-sidecar
        app: dojot
    spec:
      restartPolicy: Always
      containers:
      - name: device-manager-sidecar
        image: dojot/keycloak-microservice-sidecar:{{ dojot_backend_version }}
        env:
        - name: HOSTNAME
          value: device-manager-sidecar-1
        - name: KEYCLOAKMICROSERVICESIDECAR_CONSUMER_GROUP_ID
          value: device-manager-sidecar-1
        - name: KEYCLOAKMICROSERVICESIDECAR_KEYCLOAK_CLIENT_ID
          value: dojot-device-manager-sidecar
        - name: KEYCLOAKMICROSERVICESIDECAR_KEYCLOAK_CLIENT_SECRET_FILE
          value: dojot-device-manager-sidecar
        - name: KEYCLOAKMICROSERVICESIDECAR_KEYCLOAK_TENANTS_URL
          value: http://keycloak-proxy:8081/api/v1/tenant
        - name: KEYCLOAKMICROSERVICESIDECAR_KEYCLOAK_URL
          value: http://keycloak:8080
        - name: KEYCLOAKMICROSERVICESIDECAR_PROXY_AUTH_MODE
          value: keycloak
        - name: KEYCLOAKMICROSERVICESIDECAR_PROXY_PORT
          value: "5000"
        - name: KEYCLOAKMICROSERVICESIDECAR_PROXY_TOKEN_INSERT
          value: legacy
        - name: KEYCLOAKMICROSERVICESIDECAR_SERVER_URL
          value: http://device-manager:5000
        - name: MICROSERVICEKEYCLOAKSIDECAR_LOGGER_CONSOLE_LEVEL
          value: debug
        - name: KEYCLOAKMICROSERVICESIDECAR_PRODUCER_METADATA_BROKER_LIST
          value: "kafka-server:{{ dojot_kafka_port }}"
        - name: KEYCLOAKMICROSERVICESIDECAR_CONSUMER_METADATA_BROKER_LIST
          value: "kafka-server:{{ dojot_kafka_port }}"
        volumeMounts:
        - name: dojot-secrets-volume
          mountPath: "/secrets"
          readOnly: true
      volumes:
      - name: dojot-secrets-volume
        secret:
          secretName: dojot-secrets
{% if dojot_enable_node_affinity %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: dojot.components/dojot
                operator: In
                values:
                - "enabled"
{% endif %}