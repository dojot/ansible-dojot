apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: kafka-ws
    app: dojot
  name: kafka-ws
  namespace: {{ dojot_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dojot
      name: kafka-ws
  template:
    metadata:
      labels:
        name: kafka-ws
        app: dojot
    spec:
      restartPolicy: Always
      securityContext:
        fsGroup: 0
      containers:
      - name: kafka-ws
        image: dojot/kafka-ws:{{ dojot_kafka_ws_version }}
        # WARNING: if you are using Mutual TLS, the readiness won't work because it's not supported
        # by Kubernetes
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 8080
{% if dojot_kafka_ws_enable_tls %}
            scheme: HTTPS
{% endif %}
          periodSeconds: 20
          timeoutSeconds: 5
        env:
        - name: KAFKA_HOSTS
          value: "kafka-server:{{ dojot_kafka_port }}"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_VERBOSE
          value: "false"
        - name: KAFKA_WS_PORT
          value: "{{ dojot_kafka_ws_port }}"
        - name: REDIS_PORT
          value: "{{ dojot_kafka_ws_redis_port }}"
        - name: KAFKA_WS_TLS
          value: "{{ dojot_kafka_ws_enable_tls }}"
          # NOTE: you must create the volume and pass the certificates to it
        - name: KAFKA_WS_TLS_CA_FILE
          value: "/opt/kafka-ws/certs/ca.crt"
        - name: KAFKA_WS_TLS_KEY_FILE
          value: "/opt/kafka-ws/certs/kafka-ws.key"
        - name: KAFKA_WS_TLS_CERT_FILE
          value: "/opt/kafka-ws/certs/kafka-ws.crt"
        - name: KAFKA_WS_REQUEST_CERT
          value: "true"
{% if dojot_kafka_ws_persistent_volumes %}
        volumeMounts:
        - name: kafka-ws
          mountPath: /opt/kafka-ws/certs
      volumes:
      - name: kafka-ws
        persistentVolumeClaim:
          claimName: kafka-ws
{% endif %}
{% if dojot_enable_node_affinity %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: dojot.components/group
                operator: In
                values:
                - "{{ dojot_node_label.dojot }}"
{% endif %}
