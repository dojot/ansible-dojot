apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: kong
    app: dojot
  name: kong
  namespace: {{ dojot_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dojot
      name: kong
  template:
    metadata:
      labels:
        name: kong
        app: dojot
    spec:
{% if dojot_enable_node_affinity %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: dojot.components/group
                operator: In
                values:
                - "{{ dojot_node_label.dojot }}"
{% endif %}
      restartPolicy: Always
      securityContext:
        # User kong has UID 100
        runAsUser: 100
      containers:
      - name: kong
        image: dojot/kong:{{ dojot_apigw_version }}
        ports:
        - containerPort: {{ dojot_internal_http_port }}
        - containerPort: {{ dojot_internal_api_config_port }}
{% if dojot_apigw_enable_mutual_tls %}
        - containerPort: {{ dojot_internal_https_port }}
{% endif %}
        env:
        - name: KONG_DATABASE
          value: postgres
        - name: KONG_PG_HOST
          value: postgres
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              name: kong-secret
              key: user
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kong-secret
              key: password
        - name: KONG_PG_DATABASE
          valueFrom:
            secretKeyRef:
              name: kong-secret
              key: db
{% if dojot_apigw_enable_mutual_tls %}
        # NOTE: you must create the volume and pass the certificates to it
        # NOTE: the certificate files' owner UID must be 100 and the permission must be 400
        - name: KONG_SSL_CERT_KEY
          value: "/certs/kong.key"
        - name: KONG_SSL_CERT
          value: "/certs/kong.crt"
        - name: KONG_NGINX_PROXY_PROXY_SSL_CERTIFICATE_KEY
          value: "/certs/kong-internal.key"
        - name: KONG_NGINX_PROXY_PROXY_SSL_CERTIFICATE
          value: "/certs/kong-internal.crt"
        - name: KONG_NGINX_PROXY_PROXY_SSL_TRUSTED_CERTIFICATE
          value: "/certs/ca.crt"
        - name: KONG_NGINX_PROXY_PROXY_SSL_VERIFY
          value: "on"
        - name: KONG_NGINX_PROXY_PROXY_SSL_VERIFY_DEPTH
          value: "2"
{% endif %}
{% if dojot_apigw_persistent_volumes %}
        volumeMounts:
        - name: kong
          mountPath: /certs
      volumes:
      - name: kong
        persistentVolumeClaim:
          claimName: kong
{% endif %}
