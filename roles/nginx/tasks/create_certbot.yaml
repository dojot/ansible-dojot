---

- name: Create letsencrypt directory
  become: yes
  file:
    path: /etc/letsencrypt
    state: directory

- name: Delete default http config file
  become: yes
  file:
    path: /etc/nginx/conf.d/default.conf
    state: absent

- name: Copy default http config file - letsencrypt
  become: yes
  template:
    src: "nginx_letsencrypt.conf.j2"
    dest: "/etc/nginx/conf.d/default.conf"
    # state: absent

- name: restart nginx
  become: yes
  service:
    name: nginx
    state: restarted
    enabled: yes

## Certbot
- name: Install Certbot.
  become: yes
  package: "name={{ certbot_package }} state=present"

- name: Set Certbot script variable.
  set_fact:
    certbot_script: "{{ certbot_package }}"

- name: Create data directory
  become: yes
  file:
    path: /etc/letsencrypt/data
    state: directory

- name: Check if certificate already exists.
  become: yes
  stat:
    path: /etc/letsencrypt/live/{{ certbot_certs_domain }}/cert.pem
  register: letsencrypt_cert


- name: Ensure pre and post hook folders exist.
  become: yes
  file:
    path: /etc/letsencrypt/renewal-hooks/{{ item }}
    state: directory
    mode: 0755
    owner: root
    group: root
  with_items:
    - pre
    - post

- name: Create pre hook to stop services.
  become: yes
  template:
    src: stop_services.j2
    dest: /etc/letsencrypt/renewal-hooks/pre/stop_services
    owner: root
    group: root
    mode: 0750
  when:
    - certbot_services is defined
    - certbot_services

- name: Create post hook to start services.
  become: yes
  template:
    src: start_services.j2
    dest: /etc/letsencrypt/renewal-hooks/post/start_services
    owner: root
    group: root
    mode: 0750
  when:
    - certbot_services is defined
    - certbot_services

- name: Generate new certificate if one doesn't exist.
  become: yes
  command: "{{ certbot_create_command }}"
  when: not letsencrypt_cert.stat.exists

- name: Add cron job for certbot renewal (if configured).
  cron:
    name: Certbot automatic renewal.
    job: "{{ certbot_script }} renew {{ certbot_auto_renew_options }}"
    minute: "{{ certbot_auto_renew_minute }}"
    hour: "{{ certbot_auto_renew_hour }}"
    user: "{{ certbot_auto_renew_user }}"